{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\contact-keeper\\\\client\\\\src\\\\context\\\\auth\\\\AuthState.js\";\nimport React, { useReducer } from \"react\";\nimport AuthContext from './AuthContext';\nimport AuthReducer from './AuthReducer';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS } from '../types';\nimport axios from 'axios';\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(AuthReducer, initialState); //Load User\n\n  const loadUser = () => {\n    console.log('LoadUser');\n  }; //Register User\n\n\n  const register = async formData => {\n    const config = {\n      header: {\n        'content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/users', formData, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n    } catch (e) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: e.response.data.msg\n      });\n    }\n  }; //Login User\n\n\n  const login = () => {\n    console.log('LoginUser');\n  }; //Logout\n\n\n  const logout = () => {\n    console.log('LogoutUser');\n  }; //Clear Errors\n\n\n  const clearErrors = () => dispatch({\n    type: CLEAR_ERRORS\n  });\n\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      user: state.user,\n      error: state.error,\n      register,\n      loadUser,\n      login,\n      logout,\n      clearErrors\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["C:/Users/User/Desktop/contact-keeper/client/src/context/auth/AuthState.js"],"names":["React","useReducer","AuthContext","AuthReducer","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","axios","AuthState","props","initialState","token","localStorage","getItem","isAuthenticated","loading","user","error","state","dispatch","loadUser","console","log","register","formData","config","header","res","post","type","payload","data","e","response","msg","login","logout","clearErrors","children"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,UAAd,QAA+B,OAA/B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAAQC,gBAAR,EAAyBC,aAAzB,EAAuCC,WAAvC,EAAmDC,UAAnD,EAA8DC,aAA9D,EAA4EC,UAA5E,EAAuFC,MAAvF,EAA8FC,YAA9F,QAAkH,UAAlH;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAIA,MAAMC,SAAS,GAAGC,KAAK,IAAG;AACtB,QAAMC,YAAY,GAAG;AACjBC,IAAAA,KAAK,EAACC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADW;AAEjBC,IAAAA,eAAe,EAAC,IAFC;AAGjBC,IAAAA,OAAO,EAAC,IAHS;AAIjBC,IAAAA,IAAI,EAAC,IAJY;AAKjBC,IAAAA,KAAK,EAAC;AALW,GAArB;AAQA,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBvB,UAAU,CAACE,WAAD,EAAeY,YAAf,CAAnC,CATsB,CAWtB;;AAEA,QAAMU,QAAQ,GAAE,MAAI;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH,GAFD,CAbsB,CAmBtB;;;AACA,QAAMC,QAAQ,GAAE,MAAOC,QAAP,IAAkB;AAC9B,UAAMC,MAAM,GAAE;AACVC,MAAAA,MAAM,EAAC;AACH,wBAAe;AADZ;AADG,KAAd;;AAMA,QAAG;AACC,YAAMC,GAAG,GAAG,MAAMpB,KAAK,CAACqB,IAAN,CAAW,YAAX,EAAwBJ,QAAxB,EAAiCC,MAAjC,CAAlB;AAEAN,MAAAA,QAAQ,CAAC;AACLU,QAAAA,IAAI,EAAC9B,gBADA;AAEL+B,QAAAA,OAAO,EAACH,GAAG,CAACI;AAFP,OAAD,CAAR;AAKH,KARD,CAQC,OAAOC,CAAP,EAAU;AAEPb,MAAAA,QAAQ,CAAC;AACLU,QAAAA,IAAI,EAAC7B,aADA;AAEL8B,QAAAA,OAAO,EAACE,CAAC,CAACC,QAAF,CAAWF,IAAX,CAAgBG;AAFnB,OAAD,CAAR;AAIH;AAEJ,GAvBD,CApBsB,CA6CtB;;;AAEA,QAAMC,KAAK,GAAE,MAAI;AACbd,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH,GAFD,CA/CsB,CAmDtB;;;AACA,QAAMc,MAAM,GAAE,MAAI;AACdf,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH,GAFD,CApDsB,CAuDtB;;;AAEA,QAAMe,WAAW,GAAE,MAAKlB,QAAQ,CAAC;AAC7BU,IAAAA,IAAI,EAACvB;AADwB,GAAD,CAAhC;;AAOA,sBACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AACzBK,MAAAA,KAAK,EAACO,KAAK,CAACP,KADa;AAEzBG,MAAAA,eAAe,EAACI,KAAK,CAACJ,eAFG;AAGzBC,MAAAA,OAAO,EAACG,KAAK,CAACH,OAHW;AAIzBC,MAAAA,IAAI,EAACE,KAAK,CAACF,IAJc;AAKzBC,MAAAA,KAAK,EAACC,KAAK,CAACD,KALa;AAMzBM,MAAAA,QANyB;AAOzBH,MAAAA,QAPyB;AAQzBe,MAAAA,KARyB;AASzBC,MAAAA,MATyB;AAUzBC,MAAAA;AAVyB,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaK5B,KAAK,CAAC6B,QAbX,CADJ;AAmBH,CAnFD;;AAqFA,eAAe9B,SAAf","sourcesContent":["import React,{useReducer} from \"react\";\r\nimport AuthContext from './AuthContext';\r\nimport AuthReducer from './AuthReducer';\r\nimport {REGISTER_SUCCESS,REGISTER_FAIL,USER_LOADED,AUTH_ERROR,LOGIN_SUCCESS,LOGIN_FAIL,LOGOUT,CLEAR_ERRORS } from '../types';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nconst AuthState = props =>{\r\n    const initialState = {\r\n        token:localStorage.getItem('token'),\r\n        isAuthenticated:null,\r\n        loading:true,\r\n        user:null,\r\n        error:null\r\n\r\n    };\r\n    const [state,dispatch] = useReducer(AuthReducer , initialState);\r\n\r\n    //Load User\r\n\r\n    const loadUser =()=>{\r\n        console.log('LoadUser')\r\n    };\r\n\r\n\r\n\r\n    //Register User\r\n    const register =async  formData =>{\r\n        const config ={\r\n            header:{\r\n                'content-Type':'application/json'\r\n            }\r\n        };\r\n\r\n        try{\r\n            const res = await axios.post('/api/users',formData,config);\r\n\r\n            dispatch({\r\n                type:REGISTER_SUCCESS,\r\n                payload:res.data\r\n            });\r\n\r\n        }catch (e) {\r\n\r\n            dispatch({\r\n                type:REGISTER_FAIL,\r\n                payload:e.response.data.msg\r\n            });\r\n        }\r\n\r\n    };\r\n\r\n    //Login User\r\n\r\n    const login =()=>{\r\n        console.log('LoginUser')\r\n    };\r\n\r\n    //Logout\r\n    const logout =()=>{\r\n        console.log('LogoutUser')\r\n    };\r\n    //Clear Errors\r\n\r\n    const clearErrors =()=> dispatch({\r\n        type:CLEAR_ERRORS\r\n    });\r\n\r\n\r\n\r\n\r\n    return (\r\n        <AuthContext.Provider value={{\r\n            token:state.token,\r\n            isAuthenticated:state.isAuthenticated,\r\n            loading:state.loading,\r\n            user:state.user,\r\n            error:state.error,\r\n            register,\r\n            loadUser,\r\n            login,\r\n            logout,\r\n            clearErrors\r\n\r\n        }}>\r\n            {props.children}\r\n\r\n        </AuthContext.Provider>\r\n    );\r\n\r\n};\r\n\r\nexport default AuthState;"]},"metadata":{},"sourceType":"module"}