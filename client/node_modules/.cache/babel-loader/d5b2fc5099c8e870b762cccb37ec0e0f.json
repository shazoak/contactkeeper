{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\contact-keeper\\\\client\\\\src\\\\context\\\\contact\\\\ContactState.js\";\nimport React, { useReducer } from \"react\";\nimport axios from 'axios';\nimport ContactContext from './ContactContext';\nimport ContactReducer from './ContactReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, CONTACT_ERROR, GET_CONTACTS, CLEAR_CONTACTS } from '../types';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: null,\n    current: null,\n    filtered: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(ContactReducer, initialState); //Get Contacts\n\n  const getContact = async () => {\n    try {\n      const res = await axios.get('/api/contacts');\n      dispatch({\n        type: GET_CONTACTS,\n        payload: res.data\n      });\n    } catch (e) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: e.response.msg\n      });\n    }\n  }; //Add contact\n\n\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/contacts', contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (e) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: e.response.msg\n      });\n    }\n  }; //Delete Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; //Clear Contacts\n\n\n  const clearContacts = () => {\n    dispatch({\n      type: CLEAR_CONTACTS\n    });\n  }; //Set Current Contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; //clear Current contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //Update Contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; //Filter Contact\n\n\n  const filterContact = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; //Clear Filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      error: state.error,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContact,\n      clearFilter,\n      getContact\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["C:/Users/User/Desktop/contact-keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","axios","ContactContext","ContactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","GET_CONTACTS","CLEAR_CONTACTS","ContactState","props","initialState","contacts","current","filtered","error","state","dispatch","getContact","res","get","type","payload","data","e","response","msg","addContact","contact","config","headers","post","deleteContact","id","clearContacts","setCurrent","clearCurrent","updateContact","filterContact","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React,{useReducer} from \"react\";\r\nimport axios from 'axios';\r\nimport ContactContext from './ContactContext';\r\nimport ContactReducer from './ContactReducer';\r\nimport {ADD_CONTACT,DELETE_CONTACT,SET_CURRENT,CLEAR_CURRENT,UPDATE_CONTACT,FILTER_CONTACTS,CLEAR_FILTER,CONTACT_ERROR,GET_CONTACTS,CLEAR_CONTACTS} from '../types';\r\n\r\nconst ContactState = props =>{\r\n    const initialState = {\r\n        contacts:null,\r\n        current : null,\r\n        filtered : null,\r\n        error:null\r\n    };\r\n    const [state,dispatch] = useReducer(ContactReducer , initialState);\r\n\r\n    //Get Contacts\r\n\r\n    const getContact = async() =>{\r\n\r\n        try {\r\n            const res = await axios.get('/api/contacts');\r\n            dispatch({type:GET_CONTACTS , payload:res.data});\r\n\r\n        }catch (e) {\r\n            dispatch({type:CONTACT_ERROR,payload:e.response.msg});\r\n\r\n        }\r\n    };\r\n\r\n\r\n\r\n    //Add contact\r\n\r\n    const addContact = async contact =>{\r\n        const config = {\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.post('/api/contacts',contact,config);\r\n            dispatch({type:ADD_CONTACT , payload:res.data});\r\n\r\n        }catch (e) {\r\n            dispatch({type:CONTACT_ERROR,payload:e.response.msg});\r\n\r\n        }\r\n    };\r\n\r\n\r\n    //Delete Contact\r\n\r\n    const deleteContact = id =>{\r\n        dispatch({type:DELETE_CONTACT , payload:id});\r\n    };\r\n\r\n    //Clear Contacts\r\n    const clearContacts = () =>{\r\n        dispatch({type:CLEAR_CONTACTS });\r\n    };\r\n\r\n    //Set Current Contact\r\n    const setCurrent = contact =>{\r\n        dispatch({type:SET_CURRENT , payload:contact});\r\n    };\r\n\r\n    //clear Current contact\r\n    const clearCurrent = () =>{\r\n        dispatch({type:CLEAR_CURRENT });\r\n    };\r\n\r\n    //Update Contact\r\n    const updateContact = contact =>{\r\n        dispatch({type:UPDATE_CONTACT , payload:contact});\r\n    };\r\n\r\n    //Filter Contact\r\n    const filterContact = text =>{\r\n        dispatch({type:FILTER_CONTACTS , payload:text});\r\n    };\r\n\r\n    //Clear Filter\r\n\r\n    const clearFilter = () =>{\r\n        dispatch({type:CLEAR_FILTER });\r\n    };\r\n\r\n    return (\r\n        <ContactContext.Provider value={{\r\n            contacts:state.contacts,\r\n            current:state.current,\r\n            filtered : state.filtered,\r\n            error:state.error,\r\n            addContact,\r\n            deleteContact,setCurrent,clearCurrent,updateContact,filterContact,clearFilter,getContact\r\n        }}>\r\n            {props.children}\r\n\r\n        </ContactContext.Provider>\r\n    );\r\n\r\n};\r\n\r\nexport default ContactState;"]},"metadata":{},"sourceType":"module"}