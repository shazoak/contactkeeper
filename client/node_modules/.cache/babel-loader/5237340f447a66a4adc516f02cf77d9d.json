{"ast":null,"code":"import { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, CONTACT_ERROR, GET_CONTACTS, CLEAR_CONTACTS } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case GET_CONTACTS:\n      return { ...state,\n        contacts: action.payload,\n        loading: false\n      };\n\n    case ADD_CONTACT:\n      return { ...state,\n        contacts: [...state.contacts, action.payload],\n        loading: false\n      };\n\n    case DELETE_CONTACT:\n      return { ...state,\n        contacts: state.contacts.filter(contact => contact.id !== action.payload),\n        loading: false\n      };\n\n    case CLEAR_CONTACTS:\n      return { ...state,\n        contacts: null,\n        filtered: null,\n        error: null\n      };\n\n    case SET_CURRENT:\n      return { ...state,\n        current: action.payload\n      };\n\n    case CLEAR_CURRENT:\n      return { ...state,\n        current: null\n      };\n\n    case UPDATE_CONTACT:\n      return { ...state,\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? action.payload : contact),\n        loading: false\n      };\n\n    case FILTER_CONTACTS:\n      return { ...state,\n        filtered: state.contacts.filter(contact => {\n          const regex = new RegExp(`${action.payload}`, 'gi');\n          return contact.name.match(regex) || contact.email.match(regex);\n        })\n      };\n\n    case CLEAR_FILTER:\n      return { ...state,\n        filtered: null\n      };\n\n    case CONTACT_ERROR:\n      return { ...state,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/User/Desktop/contact-keeper/client/src/context/contact/ContactReducer.js"],"names":["ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","GET_CONTACTS","CLEAR_CONTACTS","state","action","type","contacts","payload","loading","filter","contact","id","filtered","error","current","map","regex","RegExp","name","match","email"],"mappings":"AAAA,SACIA,WADJ,EAEIC,cAFJ,EAGIC,WAHJ,EAIIC,aAJJ,EAKIC,cALJ,EAMIC,eANJ,EAOIC,YAPJ,EAQIC,aARJ,EASIC,YATJ,EAUIC,cAVJ,QAWO,UAXP;AAaA,gBAAe,CAACC,KAAD,EAAOC,MAAP,KAAiB;AAC5B,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKJ,YAAL;AACI,aAAO,EACH,GAAGE,KADA;AAEHG,QAAAA,QAAQ,EAACF,MAAM,CAACG,OAFb;AAGHC,QAAAA,OAAO,EAAC;AAHL,OAAP;;AAMJ,SAAKf,WAAL;AACI,aAAM,EACF,GAAGU,KADD;AAEFG,QAAAA,QAAQ,EAAC,CAAC,GAAGH,KAAK,CAACG,QAAV,EAAqBF,MAAM,CAACG,OAA5B,CAFP;AAGFC,QAAAA,OAAO,EAAC;AAHN,OAAN;;AAMJ,SAAKd,cAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeG,MAAf,CAAsBC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeP,MAAM,CAACG,OAAvD,CAFP;AAGHC,QAAAA,OAAO,EAAC;AAHL,OAAP;;AAMJ,SAAKN,cAAL;AACI,aAAO,EACH,GAAGC,KADA;AAEHG,QAAAA,QAAQ,EAAE,IAFP;AAGHM,QAAAA,QAAQ,EAAC,IAHN;AAIHC,QAAAA,KAAK,EAAC;AAJH,OAAP;;AAOJ,SAAKlB,WAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHW,QAAAA,OAAO,EAACV,MAAM,CAACG;AAFZ,OAAP;;AAMJ,SAAKX,aAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHW,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAKJ,SAAKjB,cAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeS,GAAf,CAAmBL,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeP,MAAM,CAACG,OAAP,CAAeI,EAA9B,GAAmCP,MAAM,CAACG,OAA1C,GAAoDG,OAAlF,CAFP;AAGHF,QAAAA,OAAO,EAAC;AAHL,OAAP;;AAKJ,SAAKV,eAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEHS,QAAAA,QAAQ,EAAET,KAAK,CAACG,QAAN,CAAeG,MAAf,CAAsBC,OAAO,IAAG;AACtC,gBAAMM,KAAK,GAAG,IAAIC,MAAJ,CAAY,GAAEb,MAAM,CAACG,OAAQ,EAA7B,EAA+B,IAA/B,CAAd;AACA,iBAAOG,OAAO,CAACQ,IAAR,CAAaC,KAAb,CAAmBH,KAAnB,KAA6BN,OAAO,CAACU,KAAR,CAAcD,KAAd,CAAoBH,KAApB,CAApC;AACH,SAHS;AAFP,OAAP;;AAQJ,SAAKjB,YAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHS,QAAAA,QAAQ,EAAE;AAFP,OAAP;;AAIJ,SAAKZ,aAAL;AACI,aAAO,EACH,GAAGG,KADA;AAEHU,QAAAA,KAAK,EAACT,MAAM,CAACG;AAFV,OAAP;;AAIJ;AACI,aAAOJ,KAAP;AAtER;AAwEH,CAzED","sourcesContent":["import {\r\n    ADD_CONTACT,\r\n    DELETE_CONTACT,\r\n    SET_CURRENT,\r\n    CLEAR_CURRENT,\r\n    UPDATE_CONTACT,\r\n    FILTER_CONTACTS,\r\n    CLEAR_FILTER,\r\n    CONTACT_ERROR,\r\n    GET_CONTACTS,\r\n    CLEAR_CONTACTS\r\n} from '../types';\r\n\r\nexport default (state,action) =>{\r\n    switch (action.type) {\r\n\r\n        case GET_CONTACTS:\r\n            return {\r\n                ...state,\r\n                contacts:action.payload,\r\n                loading:false\r\n            };\r\n\r\n        case ADD_CONTACT:\r\n            return{\r\n                ...state,\r\n                contacts:[...state.contacts , action.payload],\r\n                loading:false\r\n            };\r\n\r\n        case DELETE_CONTACT :\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload),\r\n                loading:false\r\n            };\r\n\r\n        case CLEAR_CONTACTS:\r\n            return {\r\n                ...state,\r\n                contacts: null,\r\n                filtered:null,\r\n                error:null,\r\n                \r\n            };\r\n        case SET_CURRENT:\r\n            return {\r\n                ...state,\r\n                current:action.payload,\r\n\r\n            };\r\n\r\n        case CLEAR_CURRENT:\r\n            return {\r\n                ...state,\r\n                current: null\r\n            };\r\n\r\n        case UPDATE_CONTACT:\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? action.payload : contact),\r\n                loading:false\r\n            };\r\n        case FILTER_CONTACTS:\r\n            return {\r\n                ...state,\r\n                filtered: state.contacts.filter(contact =>{\r\n                    const regex = new RegExp(`${action.payload}`,'gi');\r\n                    return contact.name.match(regex) || contact.email.match(regex);\r\n                })\r\n\r\n            };\r\n        case CLEAR_FILTER:\r\n            return {\r\n                ...state,\r\n                filtered: null\r\n            };\r\n        case CONTACT_ERROR:\r\n            return {\r\n                ...state,\r\n                error:action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}