{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\contact-keeper\\\\client\\\\src\\\\context\\\\contact\\\\ContactState.js\";\nimport React, { useReducer } from \"react\";\nimport axios from 'axios';\nimport { v4 as uuid } from 'uuid';\nimport ContactContext from './ContactContext';\nimport ContactReducer from './ContactReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER } from '../types';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [],\n    current: null,\n    filtered: null\n  };\n  const [state, dispatch] = useReducer(ContactReducer, initialState); //Add contact\n\n  const addContact = contact => {\n    contact.id = uuid();\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  }; //Delete Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; //Set Current Contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; //clear Current contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //Update Contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; //Filter Contact\n\n\n  const filterContact = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; //Clear Filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContact,\n      clearFilter\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["C:/Users/User/Desktop/contact-keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","axios","v4","uuid","ContactContext","ContactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","ContactState","props","initialState","contacts","current","filtered","state","dispatch","addContact","contact","id","type","payload","deleteContact","setCurrent","clearCurrent","updateContact","filterContact","text","clearFilter","children"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,UAAd,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,EAAE,IAAIC,IAAd,QAAyB,MAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAAQC,WAAR,EAAoBC,cAApB,EAAmCC,WAAnC,EAA+CC,aAA/C,EAA6DC,cAA7D,EAA4EC,eAA5E,EAA4FC,YAA5F,QAA+G,UAA/G;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAG;AACzB,QAAMC,YAAY,GAAG;AACjBC,IAAAA,QAAQ,EAAC,EADQ;AAEjBC,IAAAA,OAAO,EAAG,IAFO;AAGjBC,IAAAA,QAAQ,EAAG;AAHM,GAArB;AAKA,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBpB,UAAU,CAACK,cAAD,EAAkBU,YAAlB,CAAnC,CANyB,CAQzB;;AAEA,QAAMM,UAAU,GAAGC,OAAO,IAAG;AACzBA,IAAAA,OAAO,CAACC,EAAR,GAAapB,IAAI,EAAjB;AACAiB,IAAAA,QAAQ,CAAC;AAACI,MAAAA,IAAI,EAAClB,WAAN;AAAoBmB,MAAAA,OAAO,EAACH;AAA5B,KAAD,CAAR;AACH,GAHD,CAVyB,CAgBzB;;;AAEA,QAAMI,aAAa,GAAGH,EAAE,IAAG;AACvBH,IAAAA,QAAQ,CAAC;AAACI,MAAAA,IAAI,EAACjB,cAAN;AAAuBkB,MAAAA,OAAO,EAACF;AAA/B,KAAD,CAAR;AACH,GAFD,CAlByB,CAsBzB;;;AACA,QAAMI,UAAU,GAAGL,OAAO,IAAG;AACzBF,IAAAA,QAAQ,CAAC;AAACI,MAAAA,IAAI,EAAChB,WAAN;AAAoBiB,MAAAA,OAAO,EAACH;AAA5B,KAAD,CAAR;AACH,GAFD,CAvByB,CA2BzB;;;AACA,QAAMM,YAAY,GAAG,MAAK;AACtBR,IAAAA,QAAQ,CAAC;AAACI,MAAAA,IAAI,EAACf;AAAN,KAAD,CAAR;AACH,GAFD,CA5ByB,CAgCzB;;;AACA,QAAMoB,aAAa,GAAGP,OAAO,IAAG;AAC5BF,IAAAA,QAAQ,CAAC;AAACI,MAAAA,IAAI,EAACd,cAAN;AAAuBe,MAAAA,OAAO,EAACH;AAA/B,KAAD,CAAR;AACH,GAFD,CAjCyB,CAqCzB;;;AACA,QAAMQ,aAAa,GAAGC,IAAI,IAAG;AACzBX,IAAAA,QAAQ,CAAC;AAACI,MAAAA,IAAI,EAACb,eAAN;AAAwBc,MAAAA,OAAO,EAACM;AAAhC,KAAD,CAAR;AACH,GAFD,CAtCyB,CA0CzB;;;AAEA,QAAMC,WAAW,GAAG,MAAK;AACrBZ,IAAAA,QAAQ,CAAC;AAACI,MAAAA,IAAI,EAACZ;AAAN,KAAD,CAAR;AACH,GAFD;;AAIA,sBACI,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAC5BI,MAAAA,QAAQ,EAACG,KAAK,CAACH,QADa;AAE5BC,MAAAA,OAAO,EAACE,KAAK,CAACF,OAFc;AAG5BC,MAAAA,QAAQ,EAAGC,KAAK,CAACD,QAHW;AAI5BG,MAAAA,UAJ4B;AAK5BK,MAAAA,aAL4B;AAKdC,MAAAA,UALc;AAKHC,MAAAA,YALG;AAKUC,MAAAA,aALV;AAKwBC,MAAAA,aALxB;AAKsCE,MAAAA;AALtC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOKlB,KAAK,CAACmB,QAPX,CADJ;AAaH,CA7DD;;AA+DA,eAAepB,YAAf","sourcesContent":["import React,{useReducer} from \"react\";\r\nimport axios from 'axios';\r\nimport {v4 as uuid} from 'uuid';\r\nimport ContactContext from './ContactContext';\r\nimport ContactReducer from './ContactReducer';\r\nimport {ADD_CONTACT,DELETE_CONTACT,SET_CURRENT,CLEAR_CURRENT,UPDATE_CONTACT,FILTER_CONTACTS,CLEAR_FILTER} from '../types';\r\n\r\nconst ContactState = props =>{\r\n    const initialState = {\r\n        contacts:[],\r\n        current : null,\r\n        filtered : null\r\n    };\r\n    const [state,dispatch] = useReducer(ContactReducer , initialState);\r\n\r\n    //Add contact\r\n\r\n    const addContact = contact =>{\r\n        contact.id = uuid();\r\n        dispatch({type:ADD_CONTACT , payload:contact})\r\n    };\r\n\r\n\r\n    //Delete Contact\r\n\r\n    const deleteContact = id =>{\r\n        dispatch({type:DELETE_CONTACT , payload:id});\r\n    };\r\n\r\n    //Set Current Contact\r\n    const setCurrent = contact =>{\r\n        dispatch({type:SET_CURRENT , payload:contact});\r\n    };\r\n\r\n    //clear Current contact\r\n    const clearCurrent = () =>{\r\n        dispatch({type:CLEAR_CURRENT });\r\n    };\r\n\r\n    //Update Contact\r\n    const updateContact = contact =>{\r\n        dispatch({type:UPDATE_CONTACT , payload:contact});\r\n    };\r\n\r\n    //Filter Contact\r\n    const filterContact = text =>{\r\n        dispatch({type:FILTER_CONTACTS , payload:text});\r\n    };\r\n\r\n    //Clear Filter\r\n\r\n    const clearFilter = () =>{\r\n        dispatch({type:CLEAR_FILTER });\r\n    };\r\n\r\n    return (\r\n        <ContactContext.Provider value={{\r\n            contacts:state.contacts,\r\n            current:state.current,\r\n            filtered : state.filtered,\r\n            addContact,\r\n            deleteContact,setCurrent,clearCurrent,updateContact,filterContact,clearFilter\r\n        }}>\r\n            {props.children}\r\n\r\n        </ContactContext.Provider>\r\n    );\r\n\r\n};\r\n\r\nexport default ContactState;"]},"metadata":{},"sourceType":"module"}