{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\contact-keeper\\\\client\\\\src\\\\components\\\\contacts\\\\Contacts.js\";\nimport React, { Fragment, useContext, useEffect } from \"react\";\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport ContactContext from '../../context/contact/ContactContext';\nimport ContactItem from \"./ContactItem\";\n\nconst Contacts = () => {\n  const contactContext = useContext(ContactContext);\n  const {\n    contacts,\n    filtered,\n    getContacts,\n    loading\n  } = contactContext;\n  useEffect(() => {}, []);\n\n  if (contacts.length === 0) {\n    return /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 16\n      }\n    }, \"Please add a contact\");\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TransitionGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, filtered !== null ? filtered.map(contact => /*#__PURE__*/React.createElement(CSSTransition, {\n    key: contact._id,\n    timeout: 500,\n    classNames: \"item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(ContactItem, {\n    contact: contact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 107\n    }\n  }))) : contacts.map(contact => /*#__PURE__*/React.createElement(CSSTransition, {\n    key: contact._id,\n    timeout: 500,\n    classNames: \"item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ContactItem, {\n    contact: contact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  })))));\n};\n\nexport default Contacts;","map":{"version":3,"sources":["C:/Users/User/Desktop/contact-keeper/client/src/components/contacts/Contacts.js"],"names":["React","Fragment","useContext","useEffect","CSSTransition","TransitionGroup","ContactContext","ContactItem","Contacts","contactContext","contacts","filtered","getContacts","loading","length","map","contact","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,UAAvB,EAAkCC,SAAlC,QAAkD,OAAlD;AACA,SAAQC,aAAR,EAAwBC,eAAxB,QAA8C,wBAA9C;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,QAAQ,GAAE,MAAI;AAChB,QAAMC,cAAc,GAAGP,UAAU,CAACI,cAAD,CAAjC;AACA,QAAM;AAACI,IAAAA,QAAD;AAAUC,IAAAA,QAAV;AAAmBC,IAAAA,WAAnB;AAA+BC,IAAAA;AAA/B,MAA0CJ,cAAhD;AAEAN,EAAAA,SAAS,CAAC,MAAI,CAGb,CAHQ,EAGP,EAHO,CAAT;;AAMA,MAAGO,QAAQ,CAACI,MAAT,KAAoB,CAAvB,EAAyB;AACrB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAP;AACH;;AAED,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCH,QAAQ,KAAK,IAAb,GACGA,QAAQ,CAACI,GAAT,CAAaC,OAAO,iBAAI,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEA,OAAO,CAACC,GAA5B;AAAiC,IAAA,OAAO,EAAE,GAA1C;AAA+C,IAAA,UAAU,EAAC,MAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAkE,oBAAC,WAAD;AAAc,IAAA,OAAO,EAAED,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlE,CAAxB,CADH,GAEKN,QAAQ,CAACK,GAAT,CAAaC,OAAO,iBAClB,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEA,OAAO,CAACC,GAA5B;AAAiC,IAAA,OAAO,EAAE,GAA1C;AAA+C,IAAA,UAAU,EAAC,MAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACJ,oBAAC,WAAD;AAAc,IAAA,OAAO,EAAED,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADI,CADF,CAHN,CADJ,CADJ;AAcH,CA5BD;;AA8BA,eAAeR,QAAf","sourcesContent":["import React,{Fragment,useContext,useEffect} from \"react\";\r\nimport {CSSTransition , TransitionGroup} from 'react-transition-group'\r\nimport ContactContext from '../../context/contact/ContactContext';\r\nimport ContactItem from \"./ContactItem\";\r\n\r\nconst Contacts =()=>{\r\n    const contactContext = useContext(ContactContext);\r\n    const {contacts,filtered,getContacts,loading} = contactContext;\r\n\r\n    useEffect(()=>{\r\n        \r\n\r\n    },[]);\r\n\r\n\r\n    if(contacts.length === 0){\r\n        return <h4>Please add a contact</h4>\r\n    }\r\n\r\n    return(\r\n        <Fragment>\r\n            <TransitionGroup>\r\n            {filtered !== null ?\r\n                filtered.map(contact => <CSSTransition key={contact._id} timeout={500} classNames=\"item\" ><ContactItem  contact={contact} /></CSSTransition> )\r\n                : contacts.map(contact =>(\r\n                    <CSSTransition key={contact._id} timeout={500} classNames=\"item\" >\r\n                <ContactItem  contact={contact} />\r\n                    </CSSTransition>\r\n            ))}\r\n            </TransitionGroup>\r\n        </Fragment>\r\n\r\n    );\r\n};\r\n\r\nexport default Contacts;"]},"metadata":{},"sourceType":"module"}